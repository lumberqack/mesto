(()=>{"use strict";const e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input_type_visible"};class t{constructor(e,t){this._validationSettings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._validationSettings.submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._validationSettings.inputSelector))}_showValidationError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._validationSettings.inputErrorClass),s.textContent=t,s.classList.add(this._validationSettings.errorClass)}_hideValidationError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._validationSettings.inputErrorClass),t.classList.remove(this._validationSettings.errorClass),t.textContent=""}resetValidate(){this._inputList.forEach((e=>{this._hideValidationError(e)})),this._toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideValidationError(e):this._showValidationError(e,e.validationMessage)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidationCheck(){this._setEventListeners()}_disableSubmitButton(){this._submitButton.setAttribute("disabled","true"),this._submitButton.classList.add(this._validationSettings.inactiveButtonClass)}_enableSubmitButton(){this._submitButton.classList.remove(this._validationSettings.inactiveButtonClass),this._submitButton.removeAttribute("disabled")}_toggleButtonState(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}}class s{constructor(e,t,s,r,i){this._card=e,this._cardName=this._card.name,this._cardImage=this._card.link,this._cardTemplate=t,this._userId=s,this._cardId=r.cardId,this._authorId=r.authorId,this._cardZoom=i.handleCardZoom,this._cardDelete=i.handleCardDelete,this._putLike=i.handleCardLike,this._removeLike=i.handleCardDeleteLike}_createNode(){return document.querySelector(this._cardTemplate).content.querySelector(".cards__item").cloneNode(!0)}deleteCard(){this._cardElement.remove(),this._cardElement=null}renderCardLike(e){this._likeArea=e.likes,0===this._likeArea.length?this.likeSelector.textContent="":this.likeSelector.textContent=this._likeArea.length,this._likedCard()?this._likeIcon.classList.add("cards__like_active"):this._likeIcon.classList.remove("cards__like_active")}_likedCard(){return this._likeArea.find((e=>e._id===this._userId))}_interactLike(){this._likedCard()?this._removeLike(this._cardId):this._putLike(this._cardId)}makeCard(){return this._cardElement=this._createNode(),this._elementImages=this._cardElement.querySelector(".cards__image"),this._elementName=this._cardElement.querySelector(".cards__description"),this._likeIcon=this._cardElement.querySelector(".cards__like"),this._deleteIcon=this._cardElement.querySelector(".cards__delete"),this.likeSelector=this._cardElement.querySelector(".cards__like-counter"),this._elementName.textContent=this._cardName,this._elementImages.src=this._cardImage,this._elementImages.alt=this._cardName,this.renderCardLike(this._card),this._addEventHandlers(),this._cardElement}_addEventHandlers=()=>{this._likeIcon.addEventListener("click",(()=>this._interactLike())),this._elementImages.addEventListener("click",(()=>this._cardZoom(this._cardName,this._cardImage))),this._userId===this._authorId?this._deleteIcon.addEventListener("click",(()=>this._cardDelete(this,this._cardId))):this._deleteIcon.remove()}}class r{constructor(e){this._popupItem=document.querySelector(e)}open(){this._popupItem.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupItem.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupItem.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close"))&&this.close()}))}}class i extends r{constructor(e,{callbackFormSubmit:t}){super(e),this._callbackFormSubmit=t,this._popupFormItem=this._popupItem.querySelector(".popup__form"),this._inputList=Array.from(this._popupFormItem.querySelectorAll(".popup__input")),this._sendButton=this._popupItem.querySelector(".popup__submit"),this._sendButtonText=this._sendButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupFormItem.addEventListener("submit",(e=>{e.preventDefault(),this._callbackFormSubmit(this._getInputValues())}))}putSavingProcessText(){this._sendButton.textContent="Сохранение..."}returnSavingProcessText(){this._sendButton.textContent=this._sendButtonText}close(){super.close(),this._popupFormItem.reset()}}const n=document.querySelector(".profile__editor"),a=document.querySelector(".profile__add-mesto"),o=document.querySelector("#profile-popup"),c=o.querySelector(".popup__form"),d=document.querySelector("#cards-popup").querySelector(".popup__form"),l=o.querySelector("#username-input"),h=o.querySelector("#description-input"),u=document.querySelector("#avatar-popup").querySelector(".popup__form"),_=document.querySelector(".profile__avatar-edit"),p=new class{constructor({link:e,headers:t}){this._link=e,this._headers=t}_processingServerResponse(e){return e.ok?e.json():Promise.reject(`Ошибка: ${e.status}`)}getInitialCards(){return fetch(`${this._link}/cards`,{headers:this._headers}).then((e=>this._processingServerResponse(e)))}addNewCard({name:e,link:t}){return fetch(`${this._link}/cards`,{headers:this._headers,method:"POST",body:JSON.stringify({name:e,link:t})}).then((e=>this._processingServerResponse(e)))}deleteCard(e){return fetch(`${this._link}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then((e=>this._processingServerResponse(e)))}getUserData(){return fetch(`${this._link}/users/me`,{headers:this._headers}).then((e=>this._processingServerResponse(e)))}sendUserData(e){return fetch(`${this._link}/users/me`,{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.username,about:e.description})}).then((e=>this._processingServerResponse(e)))}sendAvatarData(e){return fetch(`${this._link}/users/me/avatar`,{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((e=>this._processingServerResponse(e)))}putCardLike(e){return fetch(`${this._link}/cards/${e}/likes`,{headers:this._headers,method:"PUT"}).then((e=>this._processingServerResponse(e)))}deleteCardLike(e){return fetch(`${this._link}/cards/${e}/likes`,{headers:this._headers,method:"DELETE"}).then((e=>this._processingServerResponse(e)))}}({link:"https://mesto.nomoreparties.co/v1/frontend-st-cohort-201",headers:{authorization:"d003d199-0f54-4d34-9c57-6ef355155088","Content-Type":"application/json"}});let m;const v=new class{constructor({usernameSelector:e,userDescriptionSelector:t,userAvatarSelector:s}){this._username=document.querySelector(e),this._userDescription=document.querySelector(t),this._avatarLink=document.querySelector(s)}get(){return{username:this._username.textContent,description:this._userDescription.textContent}}update({username:e,description:t}){this._username.textContent=e,this._userDescription.textContent=t}setAvatar(e){this._avatarLink.src=e}}({usernameSelector:".profile__name",userDescriptionSelector:".profile__description",userAvatarSelector:".profile__avatar"}),S=function(e){const t=new s(e,"#card-template",m,{cardId:e._id,authorId:e.owner._id},{handleCardZoom:(e,t)=>{g.open(e,t)},handleCardDelete:(e,t)=>{L.open(e,t)},handleCardLike:e=>{p.putCardLike(e).then((e=>{t.renderCardLike(e)})).catch((e=>{console.log(`При лайке карточки возникла ошибка, ${e}`)}))},handleCardDeleteLike:e=>{p.deleteCardLike(e).then((e=>{t.renderCardLike(e)})).catch((e=>{console.log(`При дизлайке карточки возникла ошибка, ${e}`)}))}});return t.makeCard()},k=new class{constructor({renderer:e},t){this._renderer=e,this._container=document.querySelector(t)}renderItems(e){e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:e=>{k.addItem(S(e))}},".cards");Promise.all([p.getUserData(),p.getInitialCards()]).then((([e,t])=>{m=e._id,v.update({username:e.name,description:e.about}),k.renderItems(t.reverse()),v.setAvatar(e.avatar)})).catch((e=>{console.log(e)}));const g=new class extends r{constructor(e){super(e),this._popupDescription=this._popupItem.querySelector(".popup__description"),this._popupImage=this._popupItem.querySelector(".popup__image")}open(e,t){this._popupDescription.textContent=e,this._popupImage.src=t,this._popupImage.alt=e,super.open()}}("#image-popup");g.setEventListeners();const E=new i("#avatar-popup",{callbackFormSubmit:e=>{E.putSavingProcessText(),p.sendAvatarData(e).then((e=>{v.setAvatar(e.avatar),E.close()})).catch((e=>{console.log(`При обновлении аватара возникла ошибка, ${e}`)})).finally((()=>{E.returnSavingProcessText()}))}});E.setEventListeners();const L=new class extends r{constructor(e,{callbackNotice:t}){super(e),this._submitButton=this._popupItem.querySelector(".popup__form"),this._callbackNotice=t}open(e,t){this._cardObject=e,this._cardId=t,super.open()}setEventListeners(){this._submitButton.addEventListener("submit",(e=>{e.preventDefault(),this._callbackNotice(this._cardObject,this._cardId)})),super.setEventListeners()}}("#delete-card",{callbackNotice:(e,t)=>{p.deleteCard(t).then((()=>{e.deleteCard(),L.close()})).catch((e=>{console.log(`При удалении карточки возникла ошибка, ${e}`)}))}});L.setEventListeners();const I=new i("#profile-popup",{callbackFormSubmit:e=>{I.putSavingProcessText(),p.sendUserData(e).then((e=>{v.update({username:e.name,description:e.about}),I.close()})).catch((e=>{console.log(`При редактировании профиля возникла ошибка, ${e}`)})).finally((()=>{I.returnSavingProcessText()}))}});I.setEventListeners();const C=new i("#cards-popup",{callbackFormSubmit:e=>{C.putSavingProcessText(),p.addNewCard({name:e.placename,link:e.placeimage}).then((e=>{k.addItem(S(e)),C.close()})).catch((e=>{console.log(`При добавлении новой карточки возникла ошибка, ${e}`)})).finally((()=>{C.returnSavingProcessText()}))}});C.setEventListeners();const{cardItemValidate:b,profileEditValidate:f,profileAvatarEditValidate:y}=(()=>{const s=s=>{const r=new t(e,s);return r.enableValidationCheck(),r};return{cardItemValidate:s(d),profileEditValidate:s(c),profileAvatarEditValidate:s(u)}})();n.addEventListener("click",(function(){I.open(),f.resetValidate();const e=v.get();l.value=e.username,h.value=e.description})),_.addEventListener("click",(function(){E.open(),y.resetValidate()})),a.addEventListener("click",(function(){C.open(),b.resetValidate()}))})();